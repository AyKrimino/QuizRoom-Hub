# Generated by Django 5.0.6 on 2024-06-14 21:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Classroom id')),
                ('name', models.CharField(max_length=200, verbose_name='Classroom name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Classroom created at')),
            ],
            options={
                'verbose_name': 'Classroom',
                'verbose_name_plural': 'Classrooms',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Question id')),
                ('description', models.TextField(verbose_name='Question description')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='CoursePost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Course id')),
                ('title', models.CharField(max_length=200, verbose_name='Course title')),
                ('content', models.TextField(verbose_name='Course content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Course created at')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Course updated at')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='classroom.classroom', verbose_name='Classroom')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Comment id')),
                ('content', models.TextField(verbose_name='Comment content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Comment created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Comment updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='classroom.coursepost', verbose_name='Course post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Answer id')),
                ('description', models.TextField(verbose_name='Answer description')),
                ('is_valid', models.BooleanField(verbose_name='Answer validity')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='classroom.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Quiz id')),
                ('title', models.CharField(max_length=200, verbose_name='Quiz title')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Quiz content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Quiz created at')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Quiz updated at')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='classroom.classroom', verbose_name='Classroom')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='classroom.quiz', verbose_name='Quiz'),
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Student id')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Profile Picture')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Student Profile',
                'verbose_name_plural': 'Student Profiles',
                'ordering': ('date_of_birth',),
            },
        ),
        migrations.CreateModel(
            name='StudentClassroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.classroom', verbose_name='Classroom')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.studentprofile', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Student Classroom relation',
                'verbose_name_plural': 'Student Classroom relations',
                'ordering': ('-date_joined',),
            },
        ),
        migrations.CreateModel(
            name='StudentQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Mark')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered at')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='classroom.quiz', verbose_name='Quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_quizzes', to='classroom.studentprofile', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Student quiz relation',
                'verbose_name_plural': 'Student quiz relations',
                'ordering': ('-mark', '-answered_at'),
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Teacher id')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Profile Picture')),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Years of Experience')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Teacher Profile',
                'verbose_name_plural': 'Teacher Profiles',
                'ordering': ('-years_of_experience', 'date_of_birth'),
            },
        ),
        migrations.AddField(
            model_name='classroom',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms', to='classroom.teacherprofile', verbose_name='Teacher'),
        ),
        migrations.AddConstraint(
            model_name='studentclassroom',
            constraint=models.UniqueConstraint(fields=('student', 'classroom'), name='student-classroom'),
        ),
    ]
